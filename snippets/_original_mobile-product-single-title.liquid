<div class="text-left mobile-product-info" id="productInfo">
	<h2 class="title" itemprop="name">{{ product.title }}</h2>

	<div class="product-description rte main-desc" itemprop="description">
		{{ product.description }}
	</div>

	<h5 class="product__price uppercase h5{% if product.compare_at_price > product.price %} on-sale{% endif %}" itemprop="price">
		<!-- <span class="money"><span id="ProductPrice">{{ product.price | money }}</span></span> -->
		<!-- {% if product.compare_at_price > product.price %}
			<p class="small compare-at em">
			<span class="money"><span id="ComparePrice">{{ product.compare_at_price_max | money }}</span></span>
			</p>
		{% endif %} -->
	</h5>

	<div itemprop="offers" itemscope itemtype="http://schema.org/Offer">

	  {% comment %}
		Get first variant, or deep linked one
	  {% endcomment %}
	  {% assign variant = product.selected_or_first_available_variant %}

	  <meta itemprop="priceCurrency" content="{{ shop.currency }}">

	  <link itemprop="availability" href="http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}">

	  {% comment %}
		ID addToCartForm is a selector for the ajaxify cart plugin
	  {% endcomment %}
	  <form action="{{ form_action }}" method="{{form_method}}" enctype="multipart/form-data" id="{{form_id}}" class="{{form_class}}">
			{% if include_customer_id %}
			  <input type="hidden" name="customer_id" value="{{customer.id}}"></input>
			{% endif %}

			{% comment %}
			  Add product variants as a dropdown.
				- By default, each variant (or combination of variants) will display as its own <option>
				- To separate these into multiple steps, which we suggest, use option_selection.js (see below)

			  You can leverage jQuery to add a callback on page load and each time the select element changes:
				- Include option_selection.js (as seen at the bottom of this file)
				- This allows you to use JavaScript anytime the variant dropdown changes
				- This also separates out your variant options (ie. size, color, etc.) to separate select elements

			  For more information on products with multiple options, visit:
				- http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options#update-product-liquid
			{% endcomment %}
			<select name="id" id="productSelectMob" class="product-single__variants">
			  {% for variant in product.variants %}
				{% if variant.available %}

				  {% comment %}
					Note: if you use option_selection.js, your <select> tag will be overwritten, meaning what you have inside <option> will not reflect what you coded below.
				  {% endcomment %}
				  <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} value="{{ variant.id }}" data-sku="{{ variant.sku }}">{{ variant.title }}</option>

				{% else %}
				  <option disabled="disabled">
					{{ variant.title }} - {{ 'products.product.sold_out' | t }}
				  </option>
				{% endif %}
			  {% endfor %}
			</select>

			{% if show_quantity %}
			<div class="quantity-selector__wrapper">
			  <label for="Quantity" class="quantity-selector uppercase">{{ 'products.product.quantity' | t }}</label>
			  <input type="number" id="Quantity" name="quantity" value="1" min="1" class="quantity-selector">
			</div>
			{% endif %}

			<div class="add-to-cart__wrapper">
			  <button type="submit" name="add" id="AddToCart" class="btn btn--large btn--full btn--clear uppercase">
					<span id="AddToCartText">{{ 'products.product.add_to_cart' | t }} </span>
			  </button>
			</div>

	  </form>
	</div>
	<hr />
</div>
